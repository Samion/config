snippet php
	<?php
	${1}
	?>
snippet ec
	echo "${1:string}";${2}
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet $_ Get['...']
	$_GET['${1:variable}']${2}
snippet $_ POST['...']
	$_POST['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
snippet class
	/**
	 * ${1}
	 **/
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet if?
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
# Case
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
# For
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
# Foreach

snippet fore
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
# Foreach with key value
snippet forek
	foreach ($${1:variable} as $${2:key} => $${3:value}) {
		${4:// code...}
	}
	${5}
# function
snippet fun
	function ${1:FunctionName} (${2})
	{
		${3:// code...}
	}
	${4}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}

snippet phpp
	<?php //$Id$${1} ?>
	${2}


" Drupal stuff
exec "Snippet impl /**<CR>* Implementation of hook_".st."hook".et."()<CR>*/ <CR>function ". base_name ."_".st."hook".et."(".st."vars".et."){<CR>".st.et."<CR>}".st.et
exec "Snippet menuitem6 $items[\'".st."path".et."\'] = array(<CR>\'title\' => ". st."$title".et.")".st.et
exec "Snippet menuitem5 $items[] = array(\'path\' => \'". st.'url'. et. "\',<CR>\'title\' => ". st."$title".et.")".st.et

exec "Snippet query $result = db_query($sql". st.et .");<CR>while($item = db_fetch_object($result){<CR>". st.et. "<CR>}<CR>".st.et

"form elements
exec "Snippet #action '#action' => 'url(\'".st."admin/settings/". base_name .et. "),".st.et
exec "Snippet #after_build '#after_build' => array('".st.base_name."_after_build_callback".et."'),".st.et
exec "Snippet #attributes '#attributes' => array('".st."class".et." => ". st.et ."'),".st.et
exec "Snippet #button_type '#button_type' => ".st."submit".et.",".st.et
exec "Snippet #autocomplete_path '#autocomplete_path' => '".st."path".et."',".st.et
exec "Snippet #collapsed '#collapsed' => ".st."TRUE".et.",".st.et
exec "Snippet #collapsible '#collapsible' => ".st."TRUE".et.",".st.et
exec "Snippet #cols '#cols' => ".st."10" .et.",<CR>".st.et
exec "Snippet #default_value '#default_value' => ". st ."default_value". et.",<CR>". st.et
exec "Snippet #description '#description' => t('".st."elementdescription" .et."'),<CR>".st.et
exec "Snippet #delta '#delta' => ".st."10".et.",".st.et
exec "Snippet #field_prefix '#field_prefix' => ".st.et.",".st.et
exec "Snippet #field_suffix '#field_suffix' => ".st.et.",".st.et
exec "Snippet #maxlength 'maxlength' => ".st."255".et.",".st.et
exec "Snippet #method '#method' => '".st."GET".et."',".st.et
exec "Snippet #multiple => '#multiple' => ".st."TRUE".et.",".st.et
exec "Snippet #options '#options' => array(".st."options" .et."),<CR>".st.et
exec "Snippet #parents => '#parents' => array('".st.et."'),".st.et
exec "Snippet #prefix '#prefix' => '".st.et."',".st.et
exec "Snippet #redirect '#redirect' => '".st.et."',".st.et
exec "Snippet #required '#required' => ".st."TRUE".et.",".st.et
exec "Snippet #return_value '#return_value' => ".st.et.",".st.et
exec "Snippet #rows '#rows' => ".st."10" .et.",<CR>".st.et
exec "Snippet #size '#size' => ".st."40" .et.",<CR>".st.et
exec "Snippet #submit '#submit' => ".st.et.",".st.et
exec "Snippet #suffix '#suffix' => '".st.et."',".st.et
exec "Snippet #prefix '#prefix' => '".st.et."',".st.et
exec "Snippet #theme '#theme' => '".st.base_name.et."',".st.et
exec "Snippet #title '#title' => t('".st."title" .et."'),".st.et
exec "Snippet #tree '#tree' => ".st."TRUE".et.",".st.et
exec "Snippet #type '#type' => '". st."type".et ."',<CR>".st.et
exec "Snippet #validate '#validate#' => array('". st.base_name."_validate".et."'),".st.et
exec "Snippet #value '#value' => ". st ."value". et.",<CR>". st.et


"form api snippets
exec "Snippet textarea array(<CR>'#type' => 'textarea',<CR>'#title' => t('".st."Textarea".et."'),<CR>'#description' => t('".st."description".et."'),<CR>'#cols' => ".st."60".et.",<CR>'#rows' => ".st."5".et.",".st.et."<CR>);<CR>". st.et

exec "Snippet textfield array(<CR>'#type' => 'textfield',<CR>'#title' => t('".st."Textfield".et."'),<CR>'#description' => t('".st."description".et."'),<CR>'#size' => ".st."40".et.",<CR>'#maxlength' => ".st."255".et.",".st.et."<CR>);<CR>". st.et

exec "Snippet value array(<CR>'#type' => 'value',<CR>'#value' => '". st."value".et ."',".st.et."<CR>);<CR>". st.et

exec "Snippet submit array(<CR>'#type' => 'submit',<CR>'#value' => t('". st."submit".et ."'),".st.et."<CR>);<CR>". st.et

exec "Snippet weight array(<CR>'#type' => 'weight',<CR>'#title' => t('".st."title".et."'),<CR>'#description' => t('".st."description".et."'),<CR>'#size' => ".st."40".et.",<CR>'#maxlength' => ".st."255".et.",".st.et."<CR>);<CR>". st.et

exec "Snippet select array(<CR>'#type' => 'select',<CR>'#title' => t('".st."Select".et."'),<CR>'#description' => t('".st."description".et."'),<CR>'#options' => array(". st.et ."),<CR>'#default_value' => ". st."0".et .",".st.et."<CR>);<CR>". st.et

exec "Snippet radios array(<CR>'#type' => 'radios',<CR>'#title' => t('".st."radios".et."'),<CR>'#description' => t('".st."description".et."'),<CR>'#options' => array(". st.et ."),<CR>'#default_value' => ". st."0".et .",".st.et."<CR>);<CR>". st.et

exec "Snippet radio array(<CR>'#type' => 'radio',<CR>'#title' => t('".st."radio".et."'),<CR>'#description' => t('".st."description".et."'),<CR>'#return_value' => ". st."0".et .",".st.et."<CR>);<CR>". st.et

exec "Snippet password array(<CR>'#type' => 'password',<CR>'#title' => t('".st."password".et."'),<CR>'#description' => t('".st."description".et."'),<CR>'#size' => ".st."40".et.",<CR>'#maxlength' => ".st."255".et.",".st.et."<CR>);<CR>". st.et

exec "Snippet markup array(<CR>'#value' => '".st."value".et."',<CR>'#prefix' => ".st."<div>".et.",<CR>'#suffix' => ". st."</div>".et .",".st.et."<CR>);<CR>". st.et

exec "Snippet item array(<CR>'#type' => '".st."item".et."',<CR>'#title' => '".st."Item".et."',<CR>'#value' => ". st."value".et .",".st.et."<CR>);<CR>". st.et

exec "Snippet hidden array(<CR>'#type' => 'hidden',<CR>'#value' => ". st."value".et .",".st.et."<CR>);<CR>". st.et

exec "Snippet file array(<CR>'#type' => 'file',<CR>'#title' => t('".st."File".et."'),<CR>'#description' => t('". st."Description".et ."'),<CR>'#type' => "st."40".et.",".st.et."<CR>);<CR>". st.et

exec "Snippet fieldset array(<CR>'#type' => 'fieldset',<CR>'#title' => t('". st."Fieldset".et ."'),<CR>'#description' => t('". st."Description".et ."'),<CR>'#collapsible' => ". st."TRUE".et.",<CR>'#collapsed' => ". st."_RUE".et.",<CR>'#access' => user_access('administer ". st. base_name .et ."),". st.et. "<CR>);". st.et

exec "Snippet checkboxes array(<CR>'#type' => 'checkboxes',<CR>'#title' => t('".st."checkboxes".et."'),<CR>'#description' => t('".st."description".et."'),<CR>'#options' => array(". st.et ."),<CR>'#default_value' => ". st."0".et .",".st.et."<CR>);<CR>". st.et

exec "Snippet checkbox array(<CR>'#type' => 'checkbox',<CR>'#title' => t('".st."Enable".et."'),".st.et."<CR>);<CR>". st.et

exec "Snippet button array(<CR>'#type' => 'button',<CR>'#value' => t('". st."Button".et ."'),".st.et."<CR>);<CR>". st.et

exec "Snippet hook_view /**<CR>* Implementation of hook_view()<CR>*/<CR>function ". base_name ."_view(&$node, $teaser = FALSE, $page = FALSE){<CR>".st.et."<CR>}".st.et

exec "Snippet hook_perm /**<CR>* Implementation of hook_perm()<CR>*/<CR>function ". base_name ."_perm(){<CR>return array('administer ". base_name ."'". st.et.");<CR>}".st.et

exec "Snippet hook_nodeapi /**<CR>* Implementation of hook_nodeapi()<CR>*/ CR>function ". base_name ."_nodeapi($node, $op, $teaser = NULL, $page = NULL){<CR>case 'load':<CR>". st.et."<CR>break;<CR>case 'view':<CR>". st.et."<CR>break;<CR>case 'alter':<CR>". st.et."<CR>break;<CR>case 'insert':<CR>". st.et."<CR>break;<CR>case 'update':<CR>". st.et."<CR>break;<CR>case 'validate':<CR>". st.et."<CR>break;<CR>case 'submit':<CR>". st.et."<CR>break;<CR>case 'delete':<CR>". st.et."<CR>break;<CR>}".st.et

exec "Snippet hook_block /**<CR>* Implementation of hook_block()<CR>*/<CR>function ". base_name ."_block($op = 'list', $delta) {<CR>switch($op) {<CR>case 'list':<CR>". "$block[0] = array(<CR>". st.et ."<CR>);<CR>". st.et ."}"
